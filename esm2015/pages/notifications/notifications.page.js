import { __awaiter } from "tslib";
import { Component } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@awesome-cordova-plugins/open-native-settings/ngx";
import * as i2 from "@awesome-cordova-plugins/diagnostic/ngx";
import * as i3 from "@ionic/angular";
export class NotificationsPage {
    constructor(openNativeSettings, diagnostic, platform) {
        this.openNativeSettings = openNativeSettings;
        this.diagnostic = diagnostic;
        this.platform = platform;
        this.notificationEnable = false;
    }
    ngOnInit() {
        this.diagnostic.isRemoteNotificationsEnabled().then(res => {
            this.notificationEnable = res;
        }, err => {
            console.log(err);
        });
        this.platform.resume.subscribe(() => __awaiter(this, void 0, void 0, function* () {
            this.diagnostic.isRemoteNotificationsEnabled().then(res => {
                this.notificationEnable = res;
            }, err => {
                console.log(err);
            });
        }));
    }
    toggleChange(eve) {
        this.openNativeSettings.open('notification_id').then(res => {
            console.log(res);
        }, err => {
            console.log(err);
        });
    }
}
NotificationsPage.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: NotificationsPage, deps: [{ token: i1.OpenNativeSettings }, { token: i2.Diagnostic }, { token: i3.Platform }], target: i0.ɵɵFactoryTarget.Component });
NotificationsPage.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: NotificationsPage, selector: "app-notifications", ngImport: i0, template: "<ion-header class=\"hdpers_det page_header\" mode=ios>\r\n  <ion-toolbar>\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button defaultHref=\"/user-profile\" text=\"\" icon=\"assets/icon/back_arrow.svg\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>Notifications</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content class=\"cntpers_det cntstu_det user_settings\" mode=ios>\r\n<!-- User settings -->\r\n<ion-list>\r\n  <!-- <ion-list-header>\r\n    <ion-label></ion-label>\r\n  </ion-list-header> -->\r\n  <ion-item-group>\r\n    <ion-item>\r\n      <ion-label>\r\n        <span class=\"semiBold\">All push notifications</span>\r\n        <span class=\"regular qual_subtit uset_tit\">Turn on to receive order tracking updates, price drop alerts and coupons in real time, anywhere</span>\r\n      </ion-label>\r\n      <ion-item class=\"usrset_tog\">\r\n        <ion-toggle slot=\"end\" name=\"All push notifications\" color=\"medium\" (ionChange)=\"toggleChange($event)\" [checked]=\"notificationEnable\"></ion-toggle>\r\n      </ion-item>\r\n  </ion-item>\r\n</ion-item-group> \r\n</ion-list>\r\n<!-- User settings -->\r\n</ion-content>\r\n", styles: ["ion-content.user_settings ion-list{margin-top:32px}ion-content.user_settings ion-list ion-item{--padding-start: 0;--inner-border-width:0;--border-color:#E2E8F0;--border-width: 0;box-shadow:0 1px #e2e8f0;margin-bottom:1px}ion-content.user_settings ion-list ion-item ion-label{padding:14px 14px 12px 16px;margin:0}ion-content.user_settings ion-list ion-item ion-label span{font-size:14px;line-height:17px;color:#0f172a}ion-content.user_settings ion-list ion-item.item ion-label{display:flex;flex-direction:column}ion-content.user_settings ion-list ion-item.item ion-label .uset_tit{font:12px/18px \"Poppins-Regular\";color:#64748b;margin-top:3px;white-space:initial}ion-content.user_settings ion-list ion-item .usrset_tog{--border-color:#fff;--inner-border-width:0;box-shadow:none;margin-bottom:0}ion-content.user_settings ion-list ion-item .usrset_tog ion-toggle{width:43px;height:25px;--handle-spacing: 3px;--background: #64748B;--background-checked: #fff;--handle-background: #fff;--handle-background-checked: #fff;--handle-width: 18px;--handle-height:18px;--handle-max-height:18px;--ion-color-base: #00B26D!important;padding-inline:0}\n"], components: [{ type: i3.IonHeader, selector: "ion-header", inputs: ["collapse", "mode", "translucent"] }, { type: i3.IonToolbar, selector: "ion-toolbar", inputs: ["color", "mode"] }, { type: i3.IonButtons, selector: "ion-buttons", inputs: ["collapse"] }, { type: i3.IonBackButton, selector: "ion-back-button", inputs: ["color", "defaultHref", "disabled", "icon", "mode", "routerAnimation", "text", "type"] }, { type: i3.IonTitle, selector: "ion-title", inputs: ["color", "size"] }, { type: i3.IonContent, selector: "ion-content", inputs: ["color", "forceOverscroll", "fullscreen", "scrollEvents", "scrollX", "scrollY"] }, { type: i3.IonList, selector: "ion-list", inputs: ["inset", "lines", "mode"] }, { type: i3.IonItemGroup, selector: "ion-item-group" }, { type: i3.IonItem, selector: "ion-item", inputs: ["button", "color", "counter", "detail", "detailIcon", "disabled", "download", "fill", "href", "lines", "mode", "rel", "routerAnimation", "routerDirection", "shape", "target", "type"] }, { type: i3.IonLabel, selector: "ion-label", inputs: ["color", "mode", "position"] }, { type: i3.IonToggle, selector: "ion-toggle", inputs: ["checked", "color", "disabled", "mode", "name", "value"] }], directives: [{ type: i3.IonBackButtonDelegate, selector: "ion-back-button", inputs: ["defaultHref", "routerAnimation"] }, { type: i3.BooleanValueAccessor, selector: "ion-checkbox,ion-toggle" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: NotificationsPage, decorators: [{
            type: Component,
            args: [{
                    selector: 'app-notifications',
                    templateUrl: './notifications.page.html',
                    styleUrls: ['./notifications.page.scss'],
                }]
        }], ctorParameters: function () { return [{ type: i1.OpenNativeSettings }, { type: i2.Diagnostic }, { type: i3.Platform }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpY2F0aW9ucy5wYWdlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdXNlci1wcm9maWxlL3NyYy9wYWdlcy9ub3RpZmljYXRpb25zL25vdGlmaWNhdGlvbnMucGFnZS50cyIsIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VzZXItcHJvZmlsZS9zcmMvcGFnZXMvbm90aWZpY2F0aW9ucy9ub3RpZmljYXRpb25zLnBhZ2UuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBdUIsTUFBTSxlQUFlLENBQUM7Ozs7O0FBVS9ELE1BQU0sT0FBTyxpQkFBaUI7SUFFNUIsWUFBb0Isa0JBQXNDLEVBQVMsVUFBc0IsRUFBUyxRQUFpQjtRQUEvRix1QkFBa0IsR0FBbEIsa0JBQWtCLENBQW9CO1FBQVMsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQUFTLGFBQVEsR0FBUixRQUFRLENBQVM7UUFENUcsdUJBQWtCLEdBQVcsS0FBSyxDQUFDO0lBQzZFLENBQUM7SUFFeEgsUUFBUTtRQUNOLElBQUksQ0FBQyxVQUFVLENBQUMsNEJBQTRCLEVBQUUsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDeEQsSUFBSSxDQUFDLGtCQUFrQixHQUFHLEdBQUcsQ0FBQztRQUNoQyxDQUFDLEVBQUUsR0FBRyxDQUFBLEVBQUU7WUFDTixPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ25CLENBQUMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLEdBQVMsRUFBRTtZQUN4QyxJQUFJLENBQUMsVUFBVSxDQUFDLDRCQUE0QixFQUFFLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFO2dCQUN4RCxJQUFJLENBQUMsa0JBQWtCLEdBQUcsR0FBRyxDQUFDO1lBQ2hDLENBQUMsRUFBRSxHQUFHLENBQUEsRUFBRTtnQkFDTixPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ25CLENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxDQUFBLENBQUMsQ0FBQztJQUVMLENBQUM7SUFDRCxZQUFZLENBQUMsR0FBUztRQUNsQixJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ3pELE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDbkIsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxFQUFFO1lBQ1AsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNuQixDQUFDLENBQUMsQ0FBQTtJQUVOLENBQUM7OytHQTFCVSxpQkFBaUI7bUdBQWpCLGlCQUFpQix5RENWOUIsd3BDQTRCQTs0RkRsQmEsaUJBQWlCO2tCQUw3QixTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxtQkFBbUI7b0JBQzdCLFdBQVcsRUFBRSwyQkFBMkI7b0JBQ3hDLFNBQVMsRUFBRSxDQUFDLDJCQUEyQixDQUFDO2lCQUN6QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBQbGF0Zm9ybVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBPcGVuTmF0aXZlU2V0dGluZ3MgfSBmcm9tICdAYXdlc29tZS1jb3Jkb3ZhLXBsdWdpbnMvb3Blbi1uYXRpdmUtc2V0dGluZ3Mvbmd4JztcclxuaW1wb3J0IHsgRGlhZ25vc3RpYyB9IGZyb20gJ0Bhd2Vzb21lLWNvcmRvdmEtcGx1Z2lucy9kaWFnbm9zdGljL25neCc7XHJcbmltcG9ydCB7IFBsYXRmb3JtIH0gZnJvbSAnQGlvbmljL2FuZ3VsYXInO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhcHAtbm90aWZpY2F0aW9ucycsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL25vdGlmaWNhdGlvbnMucGFnZS5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9ub3RpZmljYXRpb25zLnBhZ2Uuc2NzcyddLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTm90aWZpY2F0aW9uc1BhZ2UgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIHB1YmxpYyBub3RpZmljYXRpb25FbmFibGU6IGJvb2xlYW4gPWZhbHNlO1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgb3Blbk5hdGl2ZVNldHRpbmdzOiBPcGVuTmF0aXZlU2V0dGluZ3MscHJpdmF0ZSBkaWFnbm9zdGljOiBEaWFnbm9zdGljLHByaXZhdGUgcGxhdGZvcm06UGxhdGZvcm0pIHsgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuZGlhZ25vc3RpYy5pc1JlbW90ZU5vdGlmaWNhdGlvbnNFbmFibGVkKCkudGhlbihyZXMgPT57XHJcbiAgICAgIHRoaXMubm90aWZpY2F0aW9uRW5hYmxlID0gcmVzO1xyXG4gICAgfSwgZXJyPT57XHJcbiAgICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgICB9KTtcclxuICAgIHRoaXMucGxhdGZvcm0ucmVzdW1lLnN1YnNjcmliZShhc3luYyAoKSA9PiB7XHJcbiAgICAgIHRoaXMuZGlhZ25vc3RpYy5pc1JlbW90ZU5vdGlmaWNhdGlvbnNFbmFibGVkKCkudGhlbihyZXMgPT57XHJcbiAgICAgICAgdGhpcy5ub3RpZmljYXRpb25FbmFibGUgPSByZXM7XHJcbiAgICAgIH0sIGVycj0+e1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcblxyXG4gIH1cclxuICB0b2dnbGVDaGFuZ2UoZXZlOkV2ZW50KSB7XHJcbiAgICAgIHRoaXMub3Blbk5hdGl2ZVNldHRpbmdzLm9wZW4oJ25vdGlmaWNhdGlvbl9pZCcpLnRoZW4ocmVzID0+e1xyXG4gICAgICAgIGNvbnNvbGUubG9nKHJlcyk7XHJcbiAgICAgIH0sIGVyciA9PntcclxuICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgICB9KVxyXG4gICAgXHJcbiAgfVxyXG5cclxufVxyXG4iLCI8aW9uLWhlYWRlciBjbGFzcz1cImhkcGVyc19kZXQgcGFnZV9oZWFkZXJcIiBtb2RlPWlvcz5cclxuICA8aW9uLXRvb2xiYXI+XHJcbiAgICA8aW9uLWJ1dHRvbnMgc2xvdD1cInN0YXJ0XCI+XHJcbiAgICAgIDxpb24tYmFjay1idXR0b24gZGVmYXVsdEhyZWY9XCIvdXNlci1wcm9maWxlXCIgdGV4dD1cIlwiIGljb249XCJhc3NldHMvaWNvbi9iYWNrX2Fycm93LnN2Z1wiPjwvaW9uLWJhY2stYnV0dG9uPlxyXG4gICAgPC9pb24tYnV0dG9ucz5cclxuICAgIDxpb24tdGl0bGU+Tm90aWZpY2F0aW9uczwvaW9uLXRpdGxlPlxyXG4gIDwvaW9uLXRvb2xiYXI+XHJcbjwvaW9uLWhlYWRlcj5cclxuPGlvbi1jb250ZW50IGNsYXNzPVwiY250cGVyc19kZXQgY250c3R1X2RldCB1c2VyX3NldHRpbmdzXCIgbW9kZT1pb3M+XHJcbjwhLS0gVXNlciBzZXR0aW5ncyAtLT5cclxuPGlvbi1saXN0PlxyXG4gIDwhLS0gPGlvbi1saXN0LWhlYWRlcj5cclxuICAgIDxpb24tbGFiZWw+PC9pb24tbGFiZWw+XHJcbiAgPC9pb24tbGlzdC1oZWFkZXI+IC0tPlxyXG4gIDxpb24taXRlbS1ncm91cD5cclxuICAgIDxpb24taXRlbT5cclxuICAgICAgPGlvbi1sYWJlbD5cclxuICAgICAgICA8c3BhbiBjbGFzcz1cInNlbWlCb2xkXCI+QWxsIHB1c2ggbm90aWZpY2F0aW9uczwvc3Bhbj5cclxuICAgICAgICA8c3BhbiBjbGFzcz1cInJlZ3VsYXIgcXVhbF9zdWJ0aXQgdXNldF90aXRcIj5UdXJuIG9uIHRvIHJlY2VpdmUgb3JkZXIgdHJhY2tpbmcgdXBkYXRlcywgcHJpY2UgZHJvcCBhbGVydHMgYW5kIGNvdXBvbnMgaW4gcmVhbCB0aW1lLCBhbnl3aGVyZTwvc3Bhbj5cclxuICAgICAgPC9pb24tbGFiZWw+XHJcbiAgICAgIDxpb24taXRlbSBjbGFzcz1cInVzcnNldF90b2dcIj5cclxuICAgICAgICA8aW9uLXRvZ2dsZSBzbG90PVwiZW5kXCIgbmFtZT1cIkFsbCBwdXNoIG5vdGlmaWNhdGlvbnNcIiBjb2xvcj1cIm1lZGl1bVwiIChpb25DaGFuZ2UpPVwidG9nZ2xlQ2hhbmdlKCRldmVudClcIiBbY2hlY2tlZF09XCJub3RpZmljYXRpb25FbmFibGVcIj48L2lvbi10b2dnbGU+XHJcbiAgICAgIDwvaW9uLWl0ZW0+XHJcbiAgPC9pb24taXRlbT5cclxuPC9pb24taXRlbS1ncm91cD4gXHJcbjwvaW9uLWxpc3Q+XHJcbjwhLS0gVXNlciBzZXR0aW5ncyAtLT5cclxuPC9pb24tY29udGVudD5cclxuIl19